/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/vessels/route";
exports.ids = ["app/api/vessels/route"];
exports.modules = {

/***/ "(rsc)/./app/api/vessels/route.ts":
/*!**********************************!*\
  !*** ./app/api/vessels/route.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _app_utils_darkVesselDetection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/app/utils/darkVesselDetection */ \"(rsc)/./app/utils/darkVesselDetection.ts\");\n\n\n// Simulate vessel data with movement for real-time updates\nconst generateVesselData = ()=>{\n    const now = new Date();\n    const nowIso = now.toISOString();\n    const baseVessels = [\n        {\n            id: '1',\n            name: 'Ocean Voyager',\n            type: 'Cargo',\n            status: 'active',\n            location: {\n                lat: 1.3521,\n                lng: 103.8198\n            },\n            speed: 12,\n            course: 45,\n            timestamp: nowIso,\n            lastAisTransmission: new Date(now.getTime() - 2 * 60 * 60 * 1000).toISOString(),\n            previousPositions: [\n                {\n                    lat: 1.3521,\n                    lng: 103.8198,\n                    timestamp: new Date(now.getTime() - 1 * 60 * 60 * 1000).toISOString(),\n                    speed: 12\n                },\n                {\n                    lat: 1.3500,\n                    lng: 103.8150,\n                    timestamp: new Date(now.getTime() - 2 * 60 * 60 * 1000).toISOString(),\n                    speed: 11\n                }\n            ]\n        },\n        {\n            id: '2',\n            name: 'Pacific Star',\n            type: 'Tanker',\n            status: 'dark',\n            location: {\n                lat: 1.3521,\n                lng: 104.8198\n            },\n            speed: 0,\n            course: 0,\n            timestamp: nowIso,\n            lastAisTransmission: new Date(now.getTime() - 15 * 60 * 60 * 1000).toISOString(),\n            aisMatch: false,\n            previousPositions: [\n                {\n                    lat: 1.3521,\n                    lng: 104.8198,\n                    timestamp: new Date(now.getTime() - 1 * 60 * 60 * 1000).toISOString(),\n                    speed: 0\n                },\n                {\n                    lat: 1.3500,\n                    lng: 104.8150,\n                    timestamp: new Date(now.getTime() - 2 * 60 * 60 * 1000).toISOString(),\n                    speed: 8\n                },\n                {\n                    lat: 1.3480,\n                    lng: 104.8100,\n                    timestamp: new Date(now.getTime() - 10 * 60 * 60 * 1000).toISOString(),\n                    speed: 12\n                }\n            ]\n        },\n        {\n            id: '3',\n            name: 'Indian Queen',\n            type: 'Fishing',\n            status: 'alert',\n            location: {\n                lat: 1.3521,\n                lng: 102.8198\n            },\n            speed: 8,\n            course: 90,\n            timestamp: nowIso,\n            lastAisTransmission: new Date(now.getTime() - 30 * 60 * 1000).toISOString(),\n            previousPositions: [\n                {\n                    lat: 1.3521,\n                    lng: 102.8198,\n                    timestamp: new Date(now.getTime() - 30 * 60 * 1000).toISOString(),\n                    speed: 8\n                },\n                {\n                    lat: 1.3520,\n                    lng: 102.8190,\n                    timestamp: new Date(now.getTime() - 1 * 60 * 60 * 1000).toISOString(),\n                    speed: 7\n                }\n            ]\n        },\n        {\n            id: '4',\n            name: 'MV Horizon',\n            type: 'Cargo',\n            status: 'dark',\n            location: {\n                lat: 13.05,\n                lng: 74.7\n            },\n            speed: 0,\n            course: 0,\n            confidence: 0.82,\n            aisMatch: false,\n            timestamp: nowIso,\n            lastAisTransmission: new Date(now.getTime() - 20 * 60 * 60 * 1000).toISOString(),\n            previousPositions: [\n                {\n                    lat: 13.05,\n                    lng: 74.7,\n                    timestamp: new Date(now.getTime() - 1 * 60 * 60 * 1000).toISOString(),\n                    speed: 0\n                },\n                {\n                    lat: 13.048,\n                    lng: 74.698,\n                    timestamp: new Date(now.getTime() - 2 * 60 * 60 * 1000).toISOString(),\n                    speed: 0 // Speed 0 but position changed - suspicious\n                },\n                {\n                    lat: 13.046,\n                    lng: 74.696,\n                    timestamp: new Date(now.getTime() - 3 * 60 * 60 * 1000).toISOString(),\n                    speed: 0\n                }\n            ]\n        },\n        {\n            id: '5',\n            name: 'MT Energy Carrier',\n            type: 'Tanker',\n            status: 'active',\n            location: {\n                lat: 12.85,\n                lng: 74.8\n            },\n            speed: 15,\n            course: 180,\n            confidence: 0.95,\n            aisMatch: true,\n            timestamp: nowIso,\n            lastAisTransmission: new Date(now.getTime() - 5 * 60 * 1000).toISOString(),\n            previousPositions: [\n                {\n                    lat: 12.85,\n                    lng: 74.8,\n                    timestamp: new Date(now.getTime() - 15 * 60 * 1000).toISOString(),\n                    speed: 15\n                },\n                {\n                    lat: 12.848,\n                    lng: 74.798,\n                    timestamp: new Date(now.getTime() - 30 * 60 * 1000).toISOString(),\n                    speed: 14\n                }\n            ]\n        },\n        {\n            id: '6',\n            name: 'Suspicious Vessel',\n            type: 'Unknown',\n            status: 'alert',\n            location: {\n                lat: 10.5,\n                lng: 76.2\n            },\n            speed: 0,\n            course: 0,\n            confidence: 0.7,\n            aisMatch: false,\n            timestamp: nowIso,\n            lastAisTransmission: new Date(now.getTime() - 6 * 60 * 60 * 1000).toISOString(),\n            previousPositions: [\n                {\n                    lat: 10.5,\n                    lng: 76.2,\n                    timestamp: new Date(now.getTime() - 30 * 60 * 1000).toISOString(),\n                    speed: 0\n                },\n                {\n                    lat: 10.498,\n                    lng: 76.198,\n                    timestamp: new Date(now.getTime() - 1 * 60 * 60 * 1000).toISOString(),\n                    speed: 0 // Position changed but speed reported as 0 - suspicious\n                },\n                {\n                    lat: 10.496,\n                    lng: 76.196,\n                    timestamp: new Date(now.getTime() - 2 * 60 * 60 * 1000).toISOString(),\n                    speed: 0\n                }\n            ]\n        }\n    ];\n    // Add some random movement to simulate real-time position updates\n    const vesselsWithMovement = baseVessels.map((vessel)=>{\n        const movement = {\n            lat: (Math.random() - 0.5) * 0.001,\n            lng: (Math.random() - 0.5) * 0.001\n        };\n        return {\n            ...vessel,\n            location: {\n                lat: vessel.location.lat + movement.lat,\n                lng: vessel.location.lng + movement.lng\n            },\n            // Randomly adjust speed for active vessels\n            speed: vessel.status === 'active' ? Math.max(0, vessel.speed + (Math.random() - 0.5) * 2) : vessel.speed,\n            timestamp: nowIso\n        };\n    });\n    // Apply dark vessel detection logic\n    return (0,_app_utils_darkVesselDetection__WEBPACK_IMPORTED_MODULE_1__.processVesselsForDarkDetection)(vesselsWithMovement);\n};\nasync function GET() {\n    const vessels = generateVesselData();\n    const response = {\n        vessels,\n        lastUpdated: new Date().toISOString(),\n        count: vessels.length\n    };\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/vessels/route.ts\n");

/***/ }),

/***/ "(rsc)/./app/utils/darkVesselDetection.ts":
/*!******************************************!*\
  !*** ./app/utils/darkVesselDetection.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeDarkVessel: () => (/* binding */ analyzeDarkVessel),\n/* harmony export */   processVesselsForDarkDetection: () => (/* binding */ processVesselsForDarkDetection),\n/* harmony export */   updateVesselStatus: () => (/* binding */ updateVesselStatus)\n/* harmony export */ });\nconst TWELVE_HOURS_MS = 12 * 60 * 60 * 1000; // 12 hours in milliseconds\nconst POSITION_CHANGE_THRESHOLD = 0.001; // Minimum lat/lng change considered movement (roughly 100m)\n/**\n * Analyzes a vessel to determine if it should be marked as \"dark\"\n */ function analyzeDarkVessel(vessel) {\n    const now = new Date();\n    const reasons = [];\n    let isDark = false;\n    let isSuspicious = false;\n    // Check for AIS transmission gap (12+ hours)\n    if (vessel.lastAisTransmission) {\n        const lastTransmission = new Date(vessel.lastAisTransmission);\n        const timeSinceLastTransmission = now.getTime() - lastTransmission.getTime();\n        const hoursSinceLastTransmission = timeSinceLastTransmission / (60 * 60 * 1000);\n        if (timeSinceLastTransmission > TWELVE_HOURS_MS) {\n            isDark = true;\n            reasons.push(`AIS silent for ${Math.round(hoursSinceLastTransmission)} hours`);\n        }\n    }\n    // Check for suspicious movement (speed 0 but position changes)\n    if (vessel.previousPositions && vessel.previousPositions.length >= 2) {\n        const recentPositions = vessel.previousPositions.sort((a, b)=>new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()).slice(0, 3); // Look at last 3 positions\n        // Check if vessel reports speed 0 but position is changing\n        const hasZeroSpeed = vessel.speed === 0;\n        const hasMovement = checkForMovement(recentPositions);\n        if (hasZeroSpeed && hasMovement) {\n            isSuspicious = true;\n            reasons.push('Speed reported as 0 but position changing');\n        }\n        // Check for erratic movement patterns\n        const hasErraticMovement = checkErraticMovement(recentPositions);\n        if (hasErraticMovement) {\n            isSuspicious = true;\n            reasons.push('Erratic movement pattern detected');\n        }\n    }\n    // If no AIS match and vessel was previously active, mark as dark\n    if (vessel.aisMatch === false && vessel.previousPositions && vessel.previousPositions.length > 0) {\n        const wasPreviouslyActive = vessel.previousPositions.some((pos)=>new Date(pos.timestamp).getTime() > now.getTime() - TWELVE_HOURS_MS);\n        if (wasPreviouslyActive) {\n            isDark = true;\n            reasons.push('No AIS match for previously active vessel');\n        }\n    }\n    return {\n        isDark: isDark || isSuspicious,\n        isSuspicious,\n        reason: reasons,\n        lastTransmissionHours: vessel.lastAisTransmission ? (now.getTime() - new Date(vessel.lastAisTransmission).getTime()) / (60 * 60 * 1000) : undefined\n    };\n}\n/**\n * Checks if there's significant movement between positions\n */ function checkForMovement(positions) {\n    if (positions.length < 2) return false;\n    for(let i = 1; i < positions.length; i++){\n        const prev = positions[i - 1];\n        const curr = positions[i];\n        const latDiff = Math.abs(prev.lat - curr.lat);\n        const lngDiff = Math.abs(prev.lng - curr.lng);\n        if (latDiff > POSITION_CHANGE_THRESHOLD || lngDiff > POSITION_CHANGE_THRESHOLD) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Checks for erratic movement patterns that might indicate spoofing\n */ function checkErraticMovement(positions) {\n    if (positions.length < 3) return false;\n    const speeds = positions.map((p)=>p.speed);\n    const speedVariation = Math.max(...speeds) - Math.min(...speeds);\n    // Flag if speed varies dramatically (more than 20 knots difference)\n    if (speedVariation > 20) {\n        return true;\n    }\n    // Check for impossible speed changes\n    for(let i = 1; i < positions.length; i++){\n        const prev = positions[i - 1];\n        const curr = positions[i];\n        const timeDiff = (new Date(prev.timestamp).getTime() - new Date(curr.timestamp).getTime()) / 1000; // seconds\n        const distance = calculateDistance(prev.lat, prev.lng, curr.lat, curr.lng); // km\n        const calculatedSpeed = distance / timeDiff * 3600; // km/h\n        const calculatedSpeedKnots = calculatedSpeed * 0.539957; // Convert to knots\n        const reportedSpeed = curr.speed;\n        // If calculated speed differs significantly from reported speed\n        if (Math.abs(calculatedSpeedKnots - reportedSpeed) > 15) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Calculates distance between two points using Haversine formula\n */ function calculateDistance(lat1, lng1, lat2, lng2) {\n    const R = 6371; // Earth's radius in km\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLng = (lng2 - lng1) * Math.PI / 180;\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n}\n/**\n * Updates vessel status based on dark vessel analysis\n */ function updateVesselStatus(vessel) {\n    const analysis = analyzeDarkVessel(vessel);\n    let newStatus = vessel.status;\n    if (analysis.isDark) {\n        newStatus = 'dark';\n    } else if (analysis.isSuspicious) {\n        newStatus = 'alert';\n    } else if (vessel.status === 'dark' || vessel.status === 'alert') {\n        // Reset to active if no longer dark/suspicious\n        newStatus = 'active';\n    }\n    return {\n        ...vessel,\n        status: newStatus,\n        suspicious: analysis.isSuspicious\n    };\n}\n/**\n * Processes an array of vessels and updates their dark/suspicious status\n */ function processVesselsForDarkDetection(vessels) {\n    return vessels.map((vessel)=>updateVesselStatus(vessel));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/utils/darkVesselDetection.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fvessels%2Froute&page=%2Fapi%2Fvessels%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fvessels%2Froute.ts&appDir=%2FUsers%2Fsarthak215s%2FDocuments%2FGitHub%2FIODarkWatch%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsarthak215s%2FDocuments%2FGitHub%2FIODarkWatch&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fvessels%2Froute&page=%2Fapi%2Fvessels%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fvessels%2Froute.ts&appDir=%2FUsers%2Fsarthak215s%2FDocuments%2FGitHub%2FIODarkWatch%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsarthak215s%2FDocuments%2FGitHub%2FIODarkWatch&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_sarthak215s_Documents_GitHub_IODarkWatch_app_api_vessels_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/vessels/route.ts */ \"(rsc)/./app/api/vessels/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/vessels/route\",\n        pathname: \"/api/vessels\",\n        filename: \"route\",\n        bundlePath: \"app/api/vessels/route\"\n    },\n    resolvedPagePath: \"/Users/sarthak215s/Documents/GitHub/IODarkWatch/app/api/vessels/route.ts\",\n    nextConfigOutput,\n    userland: _Users_sarthak215s_Documents_GitHub_IODarkWatch_app_api_vessels_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZ2ZXNzZWxzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZ2ZXNzZWxzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGdmVzc2VscyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnNhcnRoYWsyMTVzJTJGRG9jdW1lbnRzJTJGR2l0SHViJTJGSU9EYXJrV2F0Y2glMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGc2FydGhhazIxNXMlMkZEb2N1bWVudHMlMkZHaXRIdWIlMkZJT0RhcmtXYXRjaCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDd0I7QUFDckc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9zYXJ0aGFrMjE1cy9Eb2N1bWVudHMvR2l0SHViL0lPRGFya1dhdGNoL2FwcC9hcGkvdmVzc2Vscy9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvdmVzc2Vscy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3Zlc3NlbHNcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3Zlc3NlbHMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvc2FydGhhazIxNXMvRG9jdW1lbnRzL0dpdEh1Yi9JT0RhcmtXYXRjaC9hcHAvYXBpL3Zlc3NlbHMvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fvessels%2Froute&page=%2Fapi%2Fvessels%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fvessels%2Froute.ts&appDir=%2FUsers%2Fsarthak215s%2FDocuments%2FGitHub%2FIODarkWatch%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsarthak215s%2FDocuments%2FGitHub%2FIODarkWatch&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fvessels%2Froute&page=%2Fapi%2Fvessels%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fvessels%2Froute.ts&appDir=%2FUsers%2Fsarthak215s%2FDocuments%2FGitHub%2FIODarkWatch%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsarthak215s%2FDocuments%2FGitHub%2FIODarkWatch&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();